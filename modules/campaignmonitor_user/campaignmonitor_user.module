<?php

/*
 * @file
 * Enable users to select which newsletter lists they want to subscribe to in a
 * tab on their profile page.
 */

/**
 * Implements hook_perm().
 */
function campaignmonitor_user_permission() {
  return array(
    'access campaign monitor user' => array(
      'title' => t('Access Campaign Monitor on user page'),
      'description' => t('Allow user to subscribe to lists on the user page.'),
    ),
  );
}

/**
 * Implementation of hook_menu().
 */
function campaignmonitor_user_menu() {
  $items = array();

  $items['user/%user/newsletters'] = array(
    'title' => 'My newsletters',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('campaignmonitor_user_form'),
    'access callback' => 'campaignmonitor_user_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 5,
  );

  return $items;
}

/**
 * Access callback for the user newsletters page.
 */
function campaignmonitor_user_access($account) {
  global $user;
  if ($user->uid && $user->uid == $account->uid && user_access('access campaign monitor user')) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Builds the selection list for the user profile page.
 *
 * @return array $form
 */
function campaignmonitor_user_form() {
  global $user;
  $form = array();

  // Get connected to the API and get lists.
  $cm = CampaignMonitor::getConnector();
  $lists = $cm->getLists();

  // Build options for the form selector.
  $options = array();
  $default = array();
  foreach ($lists as $list_id => $list) {
    // Check if the list is selected to be shown.
    $list_options = variable_get('campaignmonitor_list_' . $list_id, array());
    if (campaignmonitor_is_list_enabled($list_id) && isset($list_options['display']['user']) && $list_options['display']['user']) {
      $options[$list_id] = $list['name'];

      // Check if the user is subscribed to the current list.
      $default[$list_id] = 0;
      if ($cm->isSubscribed($list_id, $user->mail)) {
        $default[$list_id] = $list_id;
      }
    }
  }

  if (!empty($options)) {
    $form['lists'] = array(
      '#type' => 'checkboxes',
      '#title' => t('News lists'),
      '#description' => t('Select the news lists, that you want to subscribe to from campaign monitor.'),
      '#options' => $options,
      '#default_value' => $default,
    );

    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Update subscriptions'),
    );
  }
  else {
    drupal_set_message('There are no available lists to subscribe to at the moment.', 'warning');
  }

  $form['#submit'] = array('campaignmonitor_user_form_submit');
  $form['#validate'] = array('campaignmonitor_user_form_validate');

  return $form;
}

function campaignmonitor_user_form_validate($form, &$form_state) {
  global $user;

  // Get connected to the API and get lists.
  $cm = CampaignMonitor::getConnector();
  $lists_info = $cm->getLists();

  // Loop through the lists
  foreach ($form_state['values']['lists'] as $list_id => $selected) {
    if ($selected) {
      // If not subscribed, subscribe else do nothing. The subscribe state is
      // already in the cache, so it cheaper to check then re-subscribe.
      if (!$cm->isSubscribed($list_id, $user->mail)) {
        if (!$cm->subscribe($list_id, $user->mail, $user->name)) {
          form_set_error('', t('You where not subscribed to the list, please try again later.'));
          return FALSE;
        }
        drupal_set_message(t('You are now subscribed to the "@list" list.', array('@list' => $lists_info[$list_id]['name'])), 'status');
      }
    }
    else {
      // Maybe this is an unsubscribe.
      if ($cm->isSubscribed($list_id, $user->mail)) {
        if (!$cm->unsubscribe($list_id, $user->mail)) {
          form_set_error('', t('You where not unsubscribed to the list(s), please try again later.'));
          return FALSE;
        }
        drupal_set_message(t('You are now removed from the "@list" list.', array('@list' => $lists_info[$list_id]['name'])), 'status');
      }
    }
  }
}

function campaignmonitor_user_form_campaignmonitor_admin_settings_list_edit_alter(&$form, &$form_state, $form_id) {
  // Find form key to index the form array and load defaults.
  $form_key = 'campaignmonitor_list_' . $form['listId']['#value'];
  $defaults = variable_get($form_key, array());

  // Add option to enable this form on the user page.
  $form[$form_key]['display']['user'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display list on user page'),
    '#description' => t('Enable this list on the user page and allow subscription.'),
    '#default_value' => isset($defaults['display']['user']) ? $defaults['display']['user'] : 0,
  );
}